{"version":3,"sources":["components/Employee.js","api/APIUtils.js","components/Birthday.js","App.js","reportWebVitals.js","index.js"],"names":["Employees","data","checkedHandler","createSectionItem","letterSection","length","map","item","className","checked","lastName","firstName","type","name","id","onChange","content","i","letter","String","fromCharCode","filter","push","createSections","months","currentMonth","Date","getMonth","sortedMonths","slice","Birthday","checkedData","parseDate","date","parsedDate","parse","newDate","day","getDate","month","year","getFullYear","createBirthdayItem","monthSection","index","dob","curVal","App","useState","setData","setCheckedData","useEffect","fetch","then","json","property","sort","a","b","localeCompare","localStorageData","JSON","localStorage","getItem","newData","dataItem","find","checkedArray","Employee","dates","setItem","stringify","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f57c7f0f.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Employees = ({ data, checkedHandler }) => {\n  const createSectionItem = (letterSection) => {\n    return letterSection.length !== 0 ? (\n      letterSection.map((item) => {\n        return (\n          <div className=\"empls_item\" key={item.id}>\n            <div className={item.checked ? \"empls_name\" : null}>\n              {item.lastName} {item.firstName}\n            </div>\n\n            <label>\n              <input\n                type=\"radio\"\n                name={item.id}\n                checked={!item.checked ? true : false}\n                onChange={() => checkedHandler(item)}\n              />{\" \"}\n              not active\n            </label>\n            <label>\n              <input\n                type=\"radio\"\n                name={item.id}\n                checked={item.checked ? true : false}\n                onChange={() => checkedHandler(item)}\n              />{\" \"}\n              active\n            </label>\n          </div>\n        );\n      })\n    ) : (\n      <div className=\"empl_items empl_item_empty\">----</div>\n    );\n  };\n\n  const createSections = () => {\n    let content = [];\n    for (let i = 65; i <= 90; i++) {\n      let letter = String.fromCharCode(i);\n\n      const letterSection = data.filter((item) => item.lastName[0] === letter);\n      content.push(\n        <div className=\"empls_section\" key={letter}>\n          <div className=\"empls_letter\">{letter}</div>\n          <div className=\"empls_item\">{createSectionItem(letterSection)}</div>\n        </div>\n      );\n    }\n    return content;\n  };\n\n  return (\n    <div className=\"empls\">\n      <div className=\"empls_header\">Employees</div>\n      <div className=\"empls_sections\">{createSections()}</div>\n    </div>\n  );\n};\n\nexport default Employees;\n","export function loadEmployeesData() {\n  const url = \"https://yalantis-react-school-api.yalantis.com/api/task0/users\";\n  return fetch(url)\n    .then((data) => data.json())\n    .then((data) => data);\n}\n\nexport const months = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\",\n];\n\nconst currentMonth = new Date().getMonth();\nexport const sortedMonths = [\n  ...months.slice(currentMonth),\n  ...months.slice(0, currentMonth),\n];\n","import React from \"react\";\nimport { months, sortedMonths } from \"../api/APIUtils\";\n\nconst Birthday = ({ checkedData }) => {\n  const parseDate = (date) => {\n    const parsedDate = Date.parse(date),\n      newDate = new Date(parsedDate),\n      day = newDate.getDate(),\n      month = newDate.getMonth(),\n      year = newDate.getFullYear();\n\n    return `${day} ${months[month]}, ${year} year`;\n  };\n\n  const createBirthdayItem = (monthSection, index) => {\n    return monthSection.length !== 0 ? (\n      <div className=\"bday_section\">\n        <div className=\"bday_month\">{sortedMonths[index]}</div>\n        <ul className=\"bday_items\">\n          {monthSection.map((item) => {\n            return (\n              <div className=\"bday_item\" key={item.id}>\n                {item.lastName} {item.firstName} - {parseDate(item.dob)}\n              </div>\n            );\n          })}\n        </ul>\n      </div>\n    ) : null;\n  };\n\n  const createBirthdaySections = () => {\n    return checkedData.length === 0 ? (\n      <div>Employees List is empty</div>\n    ) : (\n      sortedMonths.map((curVal, index) => {\n        const monthSection = checkedData.filter(\n          (date) => months[new Date(Date.parse(date.dob)).getMonth()] === curVal\n        );\n\n        return (\n          <div key={curVal}>{createBirthdayItem(monthSection, index)}</div>\n        );\n      })\n    );\n  };\n\n  return (\n    <div className=\"bday\">\n      <div className=\"bday_header\">Employees birthday</div>\n      <div className=\"bday_sections\">{createBirthdaySections()}</div>\n    </div>\n  );\n};\n\nexport default Birthday;\n","import React, { useState, useEffect } from \"react\";\nimport Employees from \"./components/Employee\";\nimport Birthday from \"./components/Birthday\";\nimport { loadEmployeesData } from \"./api/APIUtils\";\n\nimport \"./App.css\";\n\nconst App = () => {\n  const [data, setData] = useState([]);\n  const [checkedData, setCheckedData] = useState([]);\n\n  useEffect(() => {\n    loadEmployeesData().then((data) => {\n      data.sort(dynamicSort(\"lastName\"));\n\n      function dynamicSort(property) {\n        return function (a, b) {\n          return a[property].localeCompare(b[property]);\n        };\n      }\n\n      const localStorageData = JSON.parse(localStorage.getItem(\"checkedData\"));\n\n      if (localStorageData) {\n        setCheckedData(localStorageData);\n\n        const newData = data.map((dataItem) => {\n          const indexData = localStorageData.find(\n            (localStorageData) => localStorageData.id === dataItem.id\n          );\n          if (indexData) {\n            return { ...dataItem, checked: true };\n          } else {\n            return { ...dataItem };\n          }\n        });\n        setData(newData);\n      } else {\n        setData(data);\n      }\n    });\n  });\n\n  const checkedArray = (newData) => {\n    return newData.filter((item) => item.checked === true).sort(monthSort());\n  };\n  function monthSort() {\n    return function (a, b) {\n      const month1 = new Date(Date.parse(a.dob)).getMonth();\n      const month2 = new Date(Date.parse(b.dob)).getMonth();\n      return month1 - month2;\n    };\n  }\n\n  const checkedHandler = (item) => {\n    const newData = data.map((dataItem) => {\n      if (dataItem.id === item.id) {\n        return { ...dataItem, checked: !dataItem.checked };\n      } else if (dataItem.checked) {\n        return { ...dataItem };\n      } else {\n        return { ...dataItem, checked: false };\n      }\n    });\n    setData(newData);\n\n    const dates = checkedArray(newData);\n    setCheckedData(dates);\n\n    localStorage.setItem(\"checkedData\", JSON.stringify(dates));\n  };\n\n  return (\n    <div className=\"App\">\n      <Employees data={data} checkedHandler={checkedHandler} />\n      <Birthday checkedData={checkedData} />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}